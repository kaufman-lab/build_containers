name: Singularity Build
on: 
  workflow_dispatch:
  push:
    branches:
      - main
  # Do the builds on all pull requests (to test them), but don't deploy on PR (see below)
  pull_request: []
jobs:

  update-def-files:
    runs-on: ubuntu-18.04
    steps:

    - uses: r-lib/actions/setup-r@v1 #install R, since the script to combine sections of definition files is written in R
      with:
        r-version: '4.1.0' 

    - uses: actions/checkout@v2 #checkout github repo
      with:
        ref: ${{ github.head_ref }} #this is necessary for stefanzweifel/git-auto-commit-action@v4

    - name: create definition files #paste together sections of singularity defintion using a dependency structure
      run: |
        cd $GITHUB_WORKSPACE
        Rscript create_def_files.R #update definition files

    - name: Get changed definition files
      run: |
        sudo mkdir /modified_definitions
        sudo cp $(git ls-files --modified) /modified_definitions
        ls /modified_definitions

    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: definition_files
        path: /modified_definitions

  build:
    name: Build
    needs: update-def-files
    runs-on: ubuntu-18.04
    env: 
      username: myoung3
      organization: kaufman-lab
    strategy:
      fail-fast: false
      matrix:
        arrays: [ 
          {repository: "geospatial_plus", tag: "4.1.0", definitionfile: "geospatial_plus4.1.0.def"}, 
          {repository: "geospatial_plus_ml", tag: "4.1.0", definitionfile: "geospatial_plus_ml4.1.0.def"},
          {repository: "geospatial_plus_ml_horovod", tag: "4.1.0", definitionfile: "geospatial_plus_ml_horovod4.1.0.def"},
          {repository: "geospatial_plus_ml_horovod", tag: "dev", definitionfile: "geospatial_plus_ml_horovoddev.def"}
        ]
    steps:
    
    - uses: actions/checkout@v2 #checkout github repo
      with:
        ref: ${{ github.base_ref }} 
          #target branch of pull request. if files are different than this target (typically main), then build.
          #this means definition files will be built even if there isn't a change relative to the last commit on the PR branch as long as they're different than main.
        
    - run: cd ~
    - name: Download definition files as artifacts
      uses: actions/download-artifact@v2
      with:
        name: definition_files
        path: ~/definition_files
    - run: |
        cp -rf ~/definition_files/${{ matrix.arrays.definitionfile }} $GITHUB_WORKSPACE//${{ matrix.arrays.definitionfile }} || : #copy updated definition file to repo
         #do nothing and don't return an error if that definition file doesn't exist in changed files.
    - run: git status

    - name: Get changed definition files
      run: |
        all_mod_files=$(git ls-files --modified)
        all_mod_files=$(echo "$all_mod_files" | tr '\n' ' ') #https://unix.stackexchange.com/questions/26788/using-sed-to-convert-newlines-into-spaces
        echo "all_modified_files=$all_mod_files" >> $GITHUB_ENV  #https://stackoverflow.com/questions/57968497/how-do-i-set-an-env-var-with-a-bash-expression-in-github-actions
    - run: echo ${{env.all_modified_files}}

    - name: Set up Go #prereq for singularity
      if: contains(env.all_modified_files, matrix.arrays.definitionfile) || github.event_name == 'workflow_dispatch'
      uses: actions/setup-go@v1
      with:
        go-version: 1.16
      id: go
      
    - name: Install other singularity dependencies
      if: contains(env.all_modified_files, matrix.arrays.definitionfile) || github.event_name == 'workflow_dispatch'
      run: |
        sudo apt-get update && sudo apt-get install -y \
          build-essential \
          libssl-dev \
          uuid-dev \
          libgpgme11-dev \
          squashfs-tools \
          libseccomp-dev \
          pkg-config
          
    - name: Install Singularity
      if: contains(env.all_modified_files, matrix.arrays.definitionfile) || github.event_name == 'workflow_dispatch'
      env:
        SINGULARITY_VERSION: 3.8.1
        GOPATH: /tmp/go
      run: |
        mkdir -p $GOPATH
        sudo mkdir -p /usr/local/var/singularity/mnt && \
        mkdir -p $GOPATH/src/github.com/sylabs && \
        cd $GOPATH/src/github.com/sylabs && \
        wget -qO- https://github.com/sylabs/singularity/releases/download/v${SINGULARITY_VERSION}/singularity-ce-${SINGULARITY_VERSION}.tar.gz | \
        tar xzv && \
        cd singularity-ce-${SINGULARITY_VERSION} && \
        ./mconfig -p /usr/local && \
        make -C builddir && \
        sudo make -C builddir install          
          


    - name: Build container
      if: contains(env.all_modified_files, matrix.arrays.definitionfile) || github.event_name == 'workflow_dispatch'
      run: |
       export GH_TOKEN=$(echo ${{ secrets.GITHUB_TOKEN }} )
       
       if [ -f "${{ matrix.arrays.definitionfile }}" ]; then
         sudo -E singularity build output.sif ${{ matrix.arrays.definitionfile }}
       else
         echo "${SINGULARITY_RECIPE} is not found."
         echo "Present working directory: $PWD"
       fi

    - name: log in to github container registry and deploy
      if: |
        ( (github.event_name != 'pull_request') && (contains(env.all_modified_files, matrix.arrays.definitionfile) || github.event_name == 'workflow_dispatch') ) || 
        ( ( (matrix.arrays.tag == 'dev') && (contains(env.all_modified_files, matrix.arrays.definitionfile))) || github.event_name == 'workflow_dispatch') 
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | singularity remote login -u ${{ env.username }} --password-stdin oras://ghcr.io
        singularity remote list
        singularity push output.sif oras://ghcr.io/${{ env.organization }}/${{ matrix.arrays.repository }}:${{ matrix.arrays.tag}} 
    
    - name: reset git repo
      if: contains(env.all_modified_files, matrix.arrays.definitionfile)
      run: |
        cd $GITHUB_WORKSPACE
        git reset --hard #discard all changes so I can switch to current ref

    - name: checkout git repo,  target ref (probably main)
      if: contains(env.all_modified_files, matrix.arrays.definitionfile)
      uses: actions/checkout@v2 #checkout github repo
      with:
        ref: ${{ github.head_ref }}

    - name: copy altered definition file back
      if: contains(env.all_modified_files, matrix.arrays.definitionfile)
      run: |
        #copy altered definition file back over
        cp -arf ~/definition_files/${{ matrix.arrays.definitionfile }} $GITHUB_WORKSPACE #copy updated definition file to repo again since I just cleared it.

    - name: commit changed definition file
      uses: stefanzweifel/git-auto-commit-action@v4
      if: contains(env.all_modified_files, matrix.arrays.definitionfile)
      with:
        commit_message: auto-generated changes to ${{ matrix.arrays.definitionfile }} 
