#### install github cli #######

R_VERSION="4.4.2"
CRAN="https://p3m.dev/cran/__linux__/noble/2024-11-15"
R_HOME="/usr/local/lib/R"
ARCH="x86_64"

## probably not necessary but make sure everything is up to do date
apt-get update
apt-get install libstdc++6
apt-get install -y software-properties-common
add-apt-repository ppa:ubuntu-toolchain-r/test 
apt-get update -y
apt-get upgrade -y
apt-get dist-upgrade -y

## download R
apt-get install -y --no-install-recommends \
    wget \
    ca-certificates

wget "https://cloud.r-project.org/src/base/R-${R_VERSION%%.*}/R-${R_VERSION}.tar.gz" -O "R.tar.gz"
echo -e "\nfinished downloading R source"
tar xzf "R.tar.gz"
cd R-*/


### locales
apt-get -y install locales

LANG="en_US.UTF-8"
/usr/sbin/locale-gen --lang "${LANG}"
/usr/sbin/update-locale --reset LANG="${LANG}"

export DEBIAN_FRONTEND=noninteractive

READLINE_VERSION=8

### dependencies in the order presented in A.1 of R-admin doc
apt-get install -y --no-install-recommends \
    build-essential \
    gfortran \
    xorg-dev \
    libreadline-dev \
    libc6-dev \
    zlib1g-dev \
    libbz2-dev \
    liblzma-dev \
    libpcre2-dev \
    libcurl4 \
    libcurl4-openssl-dev \
    texinfo \
    texlive \
    texlive-extra-utils \
    texlive-fonts-recommended \
    texlive-fonts-extra \
    texlive-latex-recommended \
    texlive-latex-extra \
    qpdf \
    ghostscript \
    tzdata \
    libcairo2-dev \
    libpango1.0-dev \
    libpangocairo-1.0-0 \
    libjpeg-turbo* \
    libpng-dev \
    libtiff-dev \
    libtiff5-dev \
    tcl-dev \
    tk-dev

### openblas
apt install -y libopenblas-dev

apt-get install -y --no-install-recommends \
    unzip \
    zip \
    htop \
    gh \
    git \
    openssh-client


R_PAPERSIZE=letter \
    R_BATCHSAVE="--no-save --no-restore" \
    LIBnn=lib \
    CFLAGS="-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g" \
    CXXFLAGS="-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g" \
    ./configure --enable-R-shlib \
    --enable-memory-profiling \
    --with-readline \
    --with-blas="openblas" \
    --with-lapack \
    --with-tcltk \
    --with-recommended-packages \
    --with-x
    
    
make
make install
make clean

## Add a library directory (for user-installed packages)
mkdir -p "${R_HOME}/site-library"
chown root:staff "${R_HOME}/site-library"
chmod g+ws "${R_HOME}/site-library"

echo "R_LIBS=\${R_LIBS-'${R_HOME}/site-library:${R_HOME}/library'}" >>"${R_HOME}/etc/Renviron.site"


#### cleanup:
cd /
rm -rf R-*/
rm -rf "R.tar.gz"

R -q -e "sessionInfo()"

echo -e "\nInstall R from source, done!"

echo "options(repos = c(CRAN = '${CRAN}'), download.file.method = 'libcurl')" >>"${R_HOME}/etc/Rprofile.site"

## Set HTTPUserAgent for RSPM (https://github.com/rocker-org/rocker/issues/400)
cat <<EOF >>"${R_HOME}/etc/Rprofile.site"
# https://docs.rstudio.com/rspm/admin/serving-binaries/#binaries-r-configuration-linux
options(HTTPUserAgent = sprintf("R/%s R (%s)", getRversion(), paste(getRversion(), R.version["platform"], R.version["arch"], R.version["os"])))
EOF

##### install packages #########
Rscript -e 'install.packages(c("data.table","labelled","batchtools", "here", "intervalaverage", 
  "renv", "R.utils", "multcomp", "lme4", "broom.mixed", "ggthemes", "car", "randomForest", "emulator", "KMsurv", "survival", "haven", "devtools", "arrow"))'


### torch for R (native) ###
Rscript -e 'install.packages(c("torch","luz","torchvision","torchdatasets"))'
Rscript -e 'torch::install_torch()' 


#### markdown support
## install markdown-mode, for rmarkdown
apt-get install -y --no-install-recommends \
    pandoc

Rscript -e 'install.packages(c("rmarkdown"))'

#### emacs

## --no-install-recommends for emacs-bin-common to avoid installing mailutils since it causes issues during noninteractive install
apt-get install -y  --no-install-recommends  emacs-bin-common
apt install -y emacs-nox

echo "emacs version:"
emacs --version

### define site-wide emacs file 
cat > /usr/share/emacs/site-lisp/site-start.el << EOF
(require 'package)

;; add melpa
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)

;; add the site package directory to package-directory-list
(push "/usr/local/share/emacs/site-lisp/elpa" package-directory-list)

(unless package-archive-contents
  (package-initialize)
  (package-refresh-contents))

;; install packages, if they don't exist, to the site directory
(setq install-list '(use-package ess markdown-mode poly-markdown poly-R company flycheck))
(dolist (package install-list)
  (unless (package-installed-p package)
    (let ((package-user-dir "/usr/local/share/emacs/site-lisp/elpa"))
      (package-install package))
  )
)

EOF

mkdir "/usr/local/share/emacs/site-lisp/elpa"
emacs --batch --load="/usr/share/emacs/site-lisp/site-start.el"


### other stuff you probably need
apt-get install -y --no-install-recommends \
    openssl
