yum -y install wget
yum -y install cpio
yum -y group install "Development Tools"
mkdir /workspace
cd /workspace

#install mkl, icc: 

tee > /tmp/oneAPI.repo << EOF
[oneAPI]
name=IntelÂ® oneAPI repository
baseurl=https://yum.repos.intel.com/oneapi
enabled=1
gpgcheck=1
#repo_gpgcheck=1
#gpgkey=https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
EOF

mv /tmp/oneAPI.repo /etc/yum.repos.d
rpm --import https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
#yum -y install intel-basekit-2021.3.0.x86_64
yum -y install intel-oneapi-mkl-devel-2021.3.0.x86_64 
yum -y install intel-oneapi-mkl-2021.3.0.x86_64    
yum -y install intel-hpckit-2021.3.0.x86_64


#install R dependencies
#this link might be useful, but it seems yum-builddep R works fine
#https://stackoverflow.com/questions/17473547/error-with-readline-yes-default-and-headers-libs-are-not-available
yum -y install epel-release
yum -y install which
yum-builddep -y R


##install R
cd /workspace
wget https://cran.r-project.org/src/base/R-3/R-3.6.2.tar.gz
tar zxf R-3.6.2.tar.gz
cd R-3.6.2/


source /opt/intel/oneapi/setvars.sh

export CC="icc"
export CXX="icpc"
export OBJC="icc"
export F77="ifort"
export FC="ifort"
export AR="xiar"
export LD="xild"

export CFLAGS="-fPIC -qopenmp -O3 -qopt-mem-layout-trans=3 -march=skylake-avx512 -ipo -multiple-processes=8"
export CXXFLAGS="-fPIC -qopenmp -O3 -qopt-mem-layout-trans=3 -march=skylake-avx512 -ipo -multiple-processes=8"
export OBJC="-fPIC -qopenmp -O3 -qopt-mem-layout-trans=3 -march=skylake-avx512 -ipo -multiple-processes=8"
export FFLAGS="-fPIC -qopenmp -O3 -qopt-mem-layout-trans=3 -march=skylake-avx512 -ipo -multiple-processes=8"
export FCFLAGS="-fPIC -qopenmp -O3 -qopt-mem-layout-trans=3 -march=skylake-avx512 -ipo -multiple-processes=8"
export LDFLAGS="-qopenmp"


MKL="-lmkl_rt -lpthread"

./configure --prefix=/share/apps/R/R-3.6.2 --enable-R-shlib --with-blas="$MKL" --with-lapack --enable-BLAS-shlib --with-x=no --enable-memory-profiling
make -j8
make install

#try to reduce imagesize without breaking stuff
rm -rf /opt/intel/oneapi/advisor
rm -rf /opt/intel/oneapi/conda_channel
rm -rf /opt/intel/oneapi/dal
rm -rf /opt/intel/oneapi/intelpython
rm -rf /opt/intel/oneapi/ipp
rm -rf /opt/intel/oneapi/vtune


#set user library to somewhere other than home, to avoid library conflicts with the local machine
#note that /pseudohome doesn't exist. you need to mount it when starting the images if you want to install user packages.
echo "R_LIBS_USER=/pseudohome/R/packages" >> /share/apps/R/R-3.6.2/lib64/R/etc/Renviron.site

export PATH=/share/apps/R/R-3.6.2/bin:$PATH 
Rscript -e 'install.packages("renv",repos = "http://cran.us.r-project.org")' #bootstrap from most recent version of renv to install versioned package dependencies